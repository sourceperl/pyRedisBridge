#!/usr/bin/env python3

# export keys between 2 redis DB with serial port
#
# redis A    <--- /dev/ttyAMA0 ---> redis B
#
# set tx:k1   --------------------> rx:k1
# rx:k2      <--------------------  set tx:k2


import atexit
import json
import redis
import serial
import threading
import time

r = redis.StrictRedis(db=0)
s = serial.Serial('/dev/ttyAMA0', baudrate=115200)

# ensure clean at exit
@atexit.register
def clean_exit():
    s.close()

# create local redis key "rx:key_name" on serial receive
def read_thread():
    while True:
        msg = s.readline().decode('utf8')
        d = json.loads(msg)
        k = 'rx:' + d['k']
        v = d['v']
        r.set(k, v)

# export local tx:key_name to serial port and remove it
def write_thread():
    while True:
        for key in r.keys('tx:*'):
            k = key.decode()[3:]
            v = r.get(key).decode('utf8')
            d = {'k': k, 'v': v}
            s.write(json.dumps(d).encode('utf8')+b'\n')
            r.delete(key)
            time.sleep(0.05)
        time.sleep(0.5)

# start serial IO thread
threading.Thread(target=read_thread).start()
threading.Thread(target=write_thread).start()
